gui:
    # stuff relating to the UI
    windowSize: 'normal' # one of 'normal' | 'half' | 'full' default is 'normal'
    scrollHeight: 3 # how many lines you scroll by
    scrollPastBottom: true # enable scrolling past the bottom
    scrollOffMargin: 4 # how many lines to keep before/after the cursor when it reaches the top/bottom of the view; see 'Scroll-off Margin' section below
    scrollOffBehavior: 'margin' # one of 'margin' | 'jump'; see 'Scroll-off Margin' section below
    sidePanelWidth: 0.3 # number from 0 to 1
    expandFocusedSidePanel: false
    mainPanelSplitMode: 'flexible' # one of 'horizontal' | 'flexible' | 'vertical'
    language: 'auto' # one of 'auto' | 'en' | 'zh-CN' | 'zh-TW' | 'pl' | 'nl' | 'ja' | 'ko' | 'ru'
    timeFormat: '02 Jan 06' # https://pkg.go.dev/time#Time.Format
    shortTimeFormat: '15:04'
    theme:
      activeBorderColor:
        - green
        - bold
      inactiveBorderColor:
        - white
      searchingActiveBorderColor:
        - cyan
        - bold
      optionsTextColor:
        - blue
      selectedLineBgColor:
        - reverse # set to `default` to have no background colour
      selectedRangeBgColor:
        - blue
      cherryPickedCommitBgColor:
        - cyan
      cherryPickedCommitFgColor:
        - blue
      unstagedChangesColor:
        - red
      defaultFgColor:
        - default
    commitLength:
      show: true
    mouseEvents: true
    skipDiscardChangeWarning: false
    skipStashWarning: false
    showFileTree: true # for rendering changes files in a tree format
    showListFooter: true # for seeing the '5 of 20' message in list panels
    showRandomTip: true
    showBranchCommitHash: false # show commit hashes alongside branch names
    showBottomLine: true # for hiding the bottom information line (unless it has important information to tell you)
    showCommandLog: true
    showIcons: false # deprecated: use nerdFontsVersion instead
    nerdFontsVersion: "2" # nerd fonts version to use ("2" or "3"); empty means don't show nerd font icons
    commandLogSize: 8
    splitDiff: 'auto' # one of 'auto' | 'always'
    skipRewordInEditorWarning: false # for skipping the confirmation before launching the reword editor
    border: 'single' # one of 'single' | 'double' | 'rounded' | 'hidden'
    animateExplosion: true # shows an explosion animation when nuking the working tree
git:
    paging:
        colorArg: always
        useConfig: false
    merging:
        # only applicable to unix users
        manualCommit: false
        # extra args passed to `git merge`, e.g. --no-ff

        args: ""
    pull:
        mode: 'rebase' # one of 'merge' | 'rebase' | 'ff-only'
    skipHookPrefix: WIP
    autoFetch: true
    # branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"

    branchLogCmd: "git log --color=always --graph --date=format:'%a %b %d %G %H:%M' --decorate --pretty=format:'%C(yellow)%h %C(green)%ad %Creset%s %C(red)%d %C(cyan)[%an]%Creset' {{branchName}} --"
    allBranchesLogCmd: "git log --color=always --graph --date=format:'%a %b %d %G %H:%M' --decorate --pretty=format:'%C(yellow)%h %C(green)%ad %Creset%s %C(red)%d %C(cyan)[%an]%Creset'"
    overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
    disableForcePushing: false
    parseEmoji: true
refresher:
  refreshInterval: 10 # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option 'git.autoRefresh'.
  fetchInterval: 60 # Re-fetch interval in seconds. Auto-fetch can be disabled via option 'git.autoFetch'.
update:
    method: prompt # can be: prompt | background | never
    days: 14 # how often an update is checked for
reporting: 'undetermined' # one of: 'on' | 'off' | 'undetermined'
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: false
disableStartupPopups: true
notARepository: 'prompt' # one of: 'prompt' | 'create' | 'skip' | 'quit'
promptToReturnFromSubprocess: true # display confirmation when subprocess terminates
keybinding:
    universal:
        quit: 'q'
        quit-alt1: '<c-c>' # alternative/alias of quit
        return: '<esc>' # return to previous menu, will quit if there's nowhere to return
        quitWithoutChangingDirectory: 'Q'
        togglePanel: '<tab>' # goto the next panel
        prevItem: '<up>' # go one line up
        nextItem: '<down>' # go one line down
        prevItem-alt: 'k' # go one line up
        nextItem-alt: 'j' # go one line down
        prevPage: ',' # go to next page in list
        nextPage: '.' # go to previous page in list
        gotoTop: '<' # go to top of list
        gotoBottom: '>' # go to bottom of list
        prevBlock: '<left>' # goto the previous block / panel
        nextBlock: '<right>' # goto the next block / panel
        prevBlock-alt: 'h' # goto the previous block / panel
        nextBlock-alt: 'l' # goto the next block / panel
        nextMatch: 'n'
        prevMatch: 'N'
        optionMenu: 'x' # show help menu
        optionMenu-alt1: '?' # show help menu
        select: '<space>'
        goInto: '<enter>'
        confirm: '<enter>'
        confirm-alt1: 'y'
        remove: 'd'
        new: 'n'
        edit: 'e'
        openFile: 'o'
        scrollUpMain: '<pgup>' # main panel scrool up
        scrollDownMain: '<pgdown>' # main panel scrool down
        scrollUpMain-alt1: 'K' # main panel scrool up
        scrollDownMain-alt1: 'J' # main panel scrool down
        scrollUpMain-alt2: '<c-u>' # main panel scrool up
        scrollDownMain-alt2: '<c-d>' # main panel scrool down
        executeCustomCommand: ':'
        createRebaseOptionsMenu: 'm'
        pushFiles: 'P'
        pullFiles: 'p'
        refresh: 'R'
        createPatchOptionsMenu: '<c-p>'
        nextTab: ']'
        prevTab: '['
        nextScreenMode: '+'
        prevScreenMode: '_'
        undo: 'z'
        redo: '<c-z>'
        filteringMenu: '<c-s>'
        diffingMenu: 'W'
        diffingMenu-alt: '<c-e>' # deprecated
        copyToClipboard: '<c-o>'
        submitEditorText: '<enter>'
        appendNewline: '<tab>'
    status:
        checkForUpdate: 'u'
        recentRepos: '<enter>'
    files:
        commitChanges: 'c'
        commitChangesWithoutHook: 'w' # commit changes without pre-commit hook
        amendLastCommit: 'A'
        commitChangesWithEditor: 'C'
        ignoreFile: 'i'
        refreshFiles: 'r'
        stashAllChanges: 's'
        viewStashOptions: 'S'
        toggleStagedAll: 'a' # stage/unstage all
        viewResetOptions: 'D'
        fetch: 'f'
    branches:
        createPullRequest: 'o'
        checkoutBranchByName: 'c'
        forceCheckoutBranch: 'F'
        rebaseBranch: 'r'
        mergeIntoCurrentBranch: 'M'
        viewGitFlowOptions: 'i'
        fastForward: 'f' # fast-forward this branch from its upstream
        pushTag: 'P'
        setUpstream: 'u' # set as upstream of checked-out branch
        fetchRemote: 'f'
    commits:
        squashDown: 's'
        renameCommit: 'r'
        renameCommitWithEditor: 'R'
        viewResetOptions: 'g'
        markCommitAsFixup: 'f'
        createFixupCommit: 'F' # create fixup commit for this commit
        squashAboveCommits: 'S'
        moveDownCommit: '<c-j>' # move commit down one
        moveUpCommit: '<c-k>' # move commit up one
        amendToCommit: 'A'
        pickCommit: 'p' # pick commit (when mid-rebase)
        revertCommit: 't'
        cherryPickCopy: 'c'
        cherryPickCopyRange: 'C'
        pasteCommits: 'v'
        tagCommit: 'T'
        checkoutCommit: '<space>'
        resetCherryPick: '<c-R>'
        copyCommitMessageToClipboard: '<c-y>'
    stash:
        popStash: 'g'
    commitFiles:
        checkoutCommitFile: 'c'
    main:
        toggleDragSelect: 'v'
        toggleDragSelect-alt: 'V'
        toggleSelectHunk: 'a'
        pickBothHunks: 'b'
    submodules:
        init: 'i'
        update: 'u'
        bulkMenu: 'b'
