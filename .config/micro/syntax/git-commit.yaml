filetype: git-commit

detect:
    filename: "^(.*[\\/])?(COMMIT_EDITMSG|TAG_EDITMSG)$"

rules:
    # Comments
    - comment.line:
        start: "^#"
        end: "$"
        rules:
            # File changes
            - identifier.class: "[[:space:]]*Changes.*[:]|[[:space:]]*Untracked.*[:]|[[:space:]]*Conflicts.*[:]"
            - error:            "[[:space:]]*deleted:.*"
            - warning:          "[[:space:]]*modified:.*"
            - info:             "[[:space:]]*new file:.*"
            - info:             "[[:space:]]*renamed:.*"

            - identifier.macro: "[[:space:]]*Your branch and '[^']+"
            - warning:          "[[:space:]]*Your branch and '"
            - identifier.macro: "[[:space:]]*Your branch is up to date with '.*'"
            - info:             "[[:space:]]*Your branch is up to date with"
            - identifier.macro: "[[:space:]]*On branch .*"
            - preproc:          "[[:space:]]*On branch"
            # Color keywords r closing issues (such as on Github)
            - type.keyword:     "\\b(?i)(([Ff]ix(es|ed)?|[Cc]lose(s|d)?) #[0-9]+)\\b"
            # - constant.string:  "\\b[[:space:]]*git.*"

    # Diffs (i.e. git commit --verbose)
    - default:
        start: "^diff --git"
        # Diff output puts a space before file contents on each line so this
        # should never match valid diff output and extend highlighting to the
        # end of the file
        end: "^ENDOFFILE"
        limit-group: "magenta"
        rules:
            - include: "patch"
